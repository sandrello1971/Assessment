// src/components/SummaryRadar.tsx - LAYOUT PULITO E PROFESSIONALE 🎨
import React, { useEffect, useState } from 'react';

interface SummaryRadarProps {
  sessionId: string;
}

const SummaryRadar: React.FC<SummaryRadarProps> = ({ sessionId }) => {
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string>('');
  const [imageLoaded, setImageLoaded] = useState(false);
  const [useFallback, setUseFallback] = useState(false);

  useEffect(() => {
    setLoading(true);
    setImageLoaded(false);
    setUseFallback(false);
    
    const testSvgEndpoint = async () => {
      try {
        const response = await fetch(`/api/assessment/${sessionId}/summary-radar-svg`);
        if (!response.ok) {
          console.warn('SVG endpoint non disponibile, uso fallback matplotlib');
          setUseFallback(true);
        }
      } catch (err) {
        console.warn('SVG endpoint failed, uso fallback matplotlib');
        setUseFallback(true);
      }
      setLoading(false);
    };

    testSvgEndpoint();
  }, [sessionId]);

  const handleImageLoad = () => {
    setImageLoaded(true);
    setLoading(false);
  };

  const handleImageError = () => {
    if (!useFallback) {
      console.log('SVG fallito, provo con matplotlib...');
      setUseFallback(true);
      setImageLoaded(false);
    } else {
      setError('Errore nel caricamento del radar riassuntivo');
      setLoading(false);
    }
  };

  const imageUrl = useFallback 
    ? `/api/assessment/${sessionId}/radar-image`
    : `/api/assessment/${sessionId}/summary-radar-svg`;

  if (loading) {
    return (
      <div className="bg-white rounded-xl shadow-lg border border-gray-200 p-8">
        <div className="text-center">
          <div className="w-16 h-16 mx-auto mb-6 bg-blue-100 rounded-full flex items-center justify-center">
            <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
          </div>
          <h3 className="text-2xl font-bold text-gray-800 mb-2">
            📊 Radar Riassuntivo
          </h3>
          <p className="text-gray-600">
            Generazione del grafico in corso...
          </p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="bg-white rounded-xl shadow-lg border border-red-200 p-8">
        <div className="text-center">
          <div className="w-16 h-16 mx-auto mb-6 bg-red-100 rounded-full flex items-center justify-center">
            <svg className="w-8 h-8 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5l-6.928-12c-.77-.833-2.694-.833-3.464 0l-6.928 12c-.77.833.192 2.5 1.732 2.5z" />
            </svg>
          </div>
          <h3 className="text-2xl font-bold text-gray-800 mb-4">
            Errore Caricamento Radar
          </h3>
          <p className="text-red-600 mb-4">{error}</p>
          <button
            onClick={() => window.location.reload()}
            className="px-6 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors"
          >
            Riprova
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden">
      
      {/* Header Semplice */}
      <div className="bg-gradient-to-r from-blue-600 to-indigo-600 px-6 py-4">
        <div className="flex items-center justify-between">
          <div>
            <h3 className="text-xl font-bold text-white flex items-center">
              📊 Radar Riassuntivo - Tutti i Processi
            </h3>
            <p className="text-blue-100 text-sm mt-1">
              Digital Assessment 4.0 • Modello Politecnico di Milano
            </p>
          </div>
          {useFallback && (
            <div className="bg-amber-500 text-amber-50 px-3 py-1 rounded-full text-xs font-medium">
              Modalità Compatibilità
            </div>
          )}
        </div>
      </div>

      {/* Radar Chart */}
      <div className="p-6">
        <div className="relative bg-gray-50 rounded-lg p-4">
          {!imageLoaded && (
            <div className="absolute inset-0 flex items-center justify-center bg-gray-50 rounded-lg">
              <div className="text-center">
                <div className="animate-pulse text-2xl mb-2">📊</div>
                <div className="text-gray-500 text-sm">Caricamento grafico...</div>
              </div>
            </div>
          )}
          
          <div className="text-center">
            <img 
              key={imageUrl}
              src={imageUrl}
              alt="Radar chart riassuntivo"
              className={`max-w-full h-auto mx-auto rounded-lg transition-opacity duration-300 ${
                imageLoaded ? 'opacity-100' : 'opacity-0'
              }`}
              style={{ maxHeight: '500px' }}
              onLoad={handleImageLoad}
              onError={handleImageError}
            />
          </div>
        </div>
      </div>

      {/* Interpretazione */}
      <div className="px-6 pb-6">
        <div className="bg-blue-50 rounded-lg p-4">
          <h4 className="font-semibold text-gray-800 mb-3 flex items-center">
            🎯 Interpretazione del Radar
          </h4>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
            <div>
              <p className="text-gray-700 mb-2">
                <span className="font-semibold">📍 Punti:</span> 
                Ogni punto rappresenta un processo aziendale
              </p>
              <p className="text-gray-700">
                <span className="font-semibold">🎨 Colori:</span> 
                Ogni processo ha un colore distintivo
              </p>
            </div>
            <div>
              <p className="text-gray-700 mb-2">
                <span className="font-semibold">🔵 Area:</span> 
                Mostra il profilo digitale complessivo
              </p>
              <p className="text-gray-700">
                <span className="font-semibold">📏 Scala:</span> 
                Da 0 (centro) a 5 (bordo esterno)
              </p>
            </div>
          </div>
        </div>
      </div>

      {/* Quick Stats */}
      <div className="px-6 pb-6">
        <div className="grid grid-cols-3 gap-4">
          <div className="text-center p-3 bg-green-50 rounded-lg border border-green-200">
            <div className="text-lg font-bold text-green-600">📈</div>
            <div className="text-xs font-semibold text-green-800">Punti di Forza</div>
            <div className="text-xs text-green-600">Processi ben sviluppati</div>
          </div>
          <div className="text-center p-3 bg-amber-50 rounded-lg border border-amber-200">
            <div className="text-lg font-bold text-amber-600">⚠️</div>
            <div className="text-xs font-semibold text-amber-800">Da Migliorare</div>
            <div className="text-xs text-amber-600">Aree di crescita</div>
          </div>
          <div className="text-center p-3 bg-blue-50 rounded-lg border border-blue-200">
            <div className="text-lg font-bold text-blue-600">🎯</div>
            <div className="text-xs font-semibold text-blue-800">Bilanciamento</div>
            <div className="text-xs text-blue-600">Uniformità processi</div>
          </div>
        </div>
      </div>

      {/* Footer Info */}
      <div className="px-6 pb-4">
        <div className="text-center text-xs text-gray-500 bg-gray-50 rounded-lg p-3">
          <p>
            Sessione: {sessionId.slice(0, 8)}... • 
            Tipo: {useFallback ? 'Radar Classico' : 'SVG'} • 
            Politecnico di Milano 4.0
          </p>
        </div>
      </div>
    </div>
  );
};

export default SummaryRadar;
